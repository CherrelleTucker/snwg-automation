//Searches all files in "Meeting Notes" folder and subfolders for the phrases "Action:" and "Action -", regardless of capitalization and spacing. 
//Populates link to the doument that contains the phrase and the paragraph following it in a Google Sheet 

function importActionsFromFolder() {
  var folderId = '1WKYw4jnP6ejRkOLAIPoPvbEYClaLE4eR';
  var folder = DriveApp.getFolderById(folderId);
  var files = folder.getFilesByType(MimeType.GOOGLE_DOCS);

  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  var currentSheet = spreadsheet.getSheetByName('Phrase Pull');

  if (!currentSheet) {
    currentSheet = spreadsheet.insertSheet('Phrase Pull');
  }

  var allActions = getActionsFromFiles(files);

  // Write the data to the current sheet
  writeDataToSheet(currentSheet, allActions);
}

function getActionsFromFiles(files) {
  var allActions = [];

  while (files.hasNext()) {
    var file = files.next();
    var docId = file.getId();
    var doc = DocumentApp.openById(docId);
    var paragraphs = doc.getBody().getParagraphs();
    var actions = findAction(paragraphs);

    if (actions.length > 0) {
      var documentName = file.getName();
      var documentLink = '=HYPERLINK("' + file.getUrl() + '", "' + documentName + '")';

      actions.forEach(function(action) {
        var actionData = [documentLink, action];
        allActions.push(actionData);
      });
    }
  }

  var headerRow = ['Document', 'Action'];
  allActions.unshift(headerRow);

  return allActions;
}

function writeDataToSheet(sheet, data) {
  if (data.length > 0) {
    var range = sheet.getRange(1, 1, data.length, data[0].length);
    range.setValues(data);
  }
}

function findAction(paragraphs) {
  var actionPhrases = [/^action\s*:\s*/i, /^action\s*-\s*/i]; // i modifier for case-insensitive matching, \s* to match any number of spaces
  var actions = [];
  
  for (var i = 0; i < paragraphs.length; i++) {
    var paragraph = paragraphs[i];
    var text = paragraph.getText().trim();
    
    for (var j = 0; j < actionPhrases.length; j++) {
      var match = text.match(actionPhrases[j]);

      if (match) {
        var action = text.substring(match[0].length).trim();
        actions.push(action);
      }
    }
  }
  
  return actions;
}
