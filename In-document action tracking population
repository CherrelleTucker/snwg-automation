// Done: Search the second column of the first table in a Google doc for the phrase "Action:" and pull the paragraph that follows
// Done: Identify the names "Cherrelle", "Pontus", "Rahul", "Jeanne", "Jeanne'", "Jeanné", "Sean", "Larry", "Anita", "Jenny", "Rachel", "Katrina" directly following the word "Action:"
// Done: Identify the second table in the document. Place the found name in the 2nd column, the paragraph following the "Action:" phrase in the 4th column.
// Done: Create an Action: Tracking table only if one does not exist. The first column is "Status". The 2nd is "Owner". The 3rd is "Project". The 4th is "Action:"
// In development: assign first level project name to the appropriate action.
// Test document ID: 1xDfJKBJqY9dZ5OZfIxdaZHGhp4MCG7498hjK_doRNzw

function createTableIfNotExist() {
  const names = ["Cherrelle", "Pontus", "Rahul", "Jeanné", "Jeanne", "Jeanne'", "Sean", "Larry", "Anita", "Jenny", "Rachel", "Katrina"];
  const doc = DocumentApp.openById('1xDfJKBJqY9dZ5OZfIxdaZHGhp4MCG7498hjK_doRNzw');
  const body = doc.getBody();
  
  // Get the first table
  const firstTable = body.getTables()[0];
  const actionList = [];

  // Iterate over the rows in the first table
  for(let i = 0; i < firstTable.getNumRows(); i++) {
    const cell = firstTable.getCell(i, 1); // second column
    const lines = cell.getText().split('\n'); // split cell content into lines

    lines.forEach((line) => {
      const actionKeyword = "Action:";
      const startIndex = line.indexOf(actionKeyword);

      if (startIndex !== -1) {
        const sentence = line.substring(startIndex + actionKeyword.length);
        const words = sentence.split(" ");

        const foundName = names.find(name => words.join(' ').includes(name)); // change here
        if(foundName) {
          const nameIndex = words.indexOf(foundName.split(' ')[0]); // change here
          const action = words.slice(nameIndex + foundName.split(' ').length).join(' '); // get remaining words as action
          actionList.push({name: foundName, action});
        }
      }
    });
  }

  // Get or create the second table
  const secondTable = secondTableExists(body) ? body.getTables()[1] : createSecondTable(body);

  // Get the first empty row in the second table
  let firstEmptyRow = 0;
  for(let i = 0; i < secondTable.getNumRows(); i++) {
    if(secondTable.getCell(i, 0).getText().trim() === '') {
      firstEmptyRow = i;
      break;
    }
  }

  // Add the actions to the second table
  for(const actionItem of actionList) {
    let row;
    if(firstEmptyRow < secondTable.getNumRows()) {
      row = secondTable.getRow(firstEmptyRow++);
    } else {
      row = secondTable.appendTableRow();
    }
    
    if(row.getNumCells() < 4) {
      while(row.getNumCells() < 4) {
        row.appendTableCell();
      }
    }

    row.getCell(1).setText(actionItem.name); // owner
    row.getCell(3).setText(actionItem.action); // action
  }
}

function secondTableExists(body) {
  return body.getTables().length > 1;
}

function createSecondTable(body) {
  const table = body.appendTable();
  const header = table.appendTableRow();
  header.appendTableCell("Status");
  header.appendTableCell("Owner");
  header.appendTableCell("Project");
  header.appendTableCell("Action");
  return table;
}

createTableIfNotExist();
